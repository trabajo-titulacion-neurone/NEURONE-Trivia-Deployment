- hosts: webservers
  serial: 1 # Number of hosts simultaneously executing the playbook

  # Roles to execute

  roles:

    # Package update and upgrade
    - {role: update-upgrade-packages}

    # Docker Installation
    - {role: docker-installation}

    # Server reboot
    - {role: reboot-and-wait}

    # A swap space (2GB) is created if it does not exist
    - {role: add-swap-space, swap_space: 2G}  

    # Installation of NodeJS and global packages using Node Version Manager (NVM)
    - {role: node-with-nvm, node_version: "10.19.0", angular_version: "9.1.13"}

    # Installation of MongoDB and configuration of users
    - {role: mongodb}

    - {role: mongodb_users, 
        admin_database: "admin", 
        mongodb_root_user: "root", 
        mongodb_root_password: "root123", 
        mongodb_admin_user: "neuroneAdmin", 
        mongodb_admin_password: "DK,V-Dk6-*Pd-PM"
      }


    # # Installation of NEURONE-Core
    # - {role: NEURONE-Core, 
    #     neurone_repository: "https://github.com/NEURONE-IL/neurone.git", 
    #     neurone_directory: "/apps/neurone-master",
    #     neurone_core_images_path: "/neurone-images",
    #     build_neurone_core_on_server: true,
    #     build_and_send_images_from_localhost: false
    #   }  

    # Installation of the neurone-gm (Server) module or API using pm2
    - {role: neurone-gm, 
        neuronegm_repository: "https://github.com/gerardoluceroc/NEURONE-GM.git", 
        neuronegm_directory: "/apps/NEURONE-GM", 
        neuronegm_server_directory: "/apps/NEURONE-GM/Server", 
        neuronegm_server_config_file_localhost: "{{ role_path }}/files/config.js",
        neuronegm_server_config_file_remote_server: "/apps/NEURONE-GM/Server/config/config.js",
        neuronegm_server_pm2_process_name: "Neuronegm-Server"
      }

    Installation of Trivia Server using pm2 and Trivia Client using Angular
    - {role: GAME, 
        # trivia_repository: "https://github.com/NEURONE-IL/GAME.git",
        trivia_repository: "https://github.com/trabajo-titulacion-neurone/neurone-trivia.git",
        trivia_directory: "/apps/GAME", 
        trivia_server_directory: "/apps/GAME/Server", 
        trivia_client_directory: "/apps/GAME/Client", 
        trivia_server_config_file_localhost: "{{ role_path }}/files/config.js",
        trivia_server_config_file_remote_server: "/apps/GAME/Server/config/config.js",
        trivia_client_environment_file_localhost: "{{ role_path }}/files/environment.ts", 
        trivia_client_environment_file_remote_server: "/apps/GAME/Client/src/environments/environment.ts", 
        trivia_client_environment_prod_file_localhost: "{{ role_path }}/files/environment.prod.ts",
        trivia_client_environment_prod_file_remote_server: "/apps/GAME/Client/src/environments/environment.prod.ts",
        directory_of_build_of_trivia_sent: "/build-trivia-frontend/public", #path of build of Trivia sent by Github Actions to upload to the trivia-server folder
        trivia_server_pm2_process_name: "Trivia-Server",
        build_trivia_frontend_on_server: true, #true if you want to build on remote server (2GB of ram required)
        build_and_send_trivia_frontend_from_localhost: false, #true if you want to build on localhost where playbook runs and send to server
      }

    # Basic installation of Nginx
    - {role: nginx,
        http_connection: false,
        http_config_file: "{{ role_path }}/templates/game_http.conf",
        https_connection: true,
        https_config_file: "{{ role_path }}/templates/game_https.conf",
        domain_name: "neurone-trivia.lat",
        email: "gerardoluceroc@gmail.com"
    }

  #   # # Firewall
  #   # - {role: firewall-with-ufw, allowed_ports: [3005, 3007] }

  tasks:

    # - name: Register a user in neuronegame database (Optional)
    #   ansible.builtin.uri:
    #     url: "http://{{ hostvars[inventory_hostname]['ansible_host'] }}/api/auth/register" #Customize your server address
    #     method: POST
    #     body_format: json
    #     body:
    #       names: "Admin"
    #       last_names: "Ejemplo"
    #       email: "admin@admin.com"
    #       password: "clave321."
    #       repeat_password: "clave321."
    #     headers:
    #       Content-Type: "application/json"
    #   register: response

    # - name: Display response
    #   debug:
    #     var: response

