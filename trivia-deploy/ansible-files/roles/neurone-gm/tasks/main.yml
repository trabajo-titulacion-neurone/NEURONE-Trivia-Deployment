---
# tasks file for neurone-gm


- name: Node version being used is loaded to link it with nvm
  ansible.builtin.include_vars:
    file: roles/node-with-nvm/vars/main.yml
    name: node_vars

- name: Clone or update neurone-gm repository
  debug:
    var: neuronegm_directory

- name: Debug user environment
  debug:
    msg: "HOME: {{ ansible_env.HOME }}, USER: {{ ansible_env.USER }}"


- name: Clone or update neurone-gm repository
  git:
    repo: "{{ neuronegm_repository }}"
    dest: "{{ neuronegm_directory }}"
    clone: yes
    force: yes
    update: yes

- name: Install dependencies.
  community.general.npm:
    path: "{{ neuronegm_server_directory }}"
    executable: "~/.nvm/versions/node/v{{ node_vars.node_version }}/bin/npm"

#Saved processes are restored in case of a server reboot
- name: pm2 resurrect
  ansible.builtin.command: pm2 resurrect

- name: Run the command "pm2 ls"
  ansible.builtin.command: pm2 ls
  register: pm2_processes
  #ignore_errors: true

- name: Analyse the output looking for the 'neuronegm' process
  ansible.builtin.set_fact:
    running_process: "{{ neuronegm_server_pm2_process_name in pm2_processes.stdout }}"


- name: Execute the PM2 command (restart) if the process is running
  ansible.builtin.command: pm2 restart {{ neuronegm_server_pm2_process_name }}
  args:
    chdir: "{{ neuronegm_server_directory }}"
  when: running_process

- name: Ejecutar el comando PM2 (start) si el proceso no está en ejecución o no está creado
  ansible.builtin.command: pm2 start app.js --name {{ neuronegm_server_pm2_process_name }}
  args:
    chdir: "{{ neuronegm_server_directory }}"
  when: not running_process

# Save current process list
- name: pm2 save
  ansible.builtin.command: pm2 save