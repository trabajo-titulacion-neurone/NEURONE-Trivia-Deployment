

- hosts: all
  #Se escribe esto para instalar por primera vez mongodb
  #Por alguna razon no funciona la segunda vez debido a que necesito autenticacion
  #la cual se activa precisamente al ejecutar los roles mongodb y mongo_users
  # become_user: root
  # become_method: sudo
  # roles:
  #   - mongodb
  #   - mongodb_users

  
  become: true
  serial: 1 #esto fue agregado junto con vars para las tareas que se usan para instalar docker
  vars:
    container_count: 4
    default_container_name: docker
    default_container_image: ubuntu
    default_container_command: sleep 1d
  tasks:

############## Instalacion y actualización de paquetes #################################################
  # - name: Run the equivalent of "apt-get update" as a separate step
  #   apt:
  #     update_cache: yes


  # - name: Update all packages to the latest version
  #   apt:
  #     upgrade: dist

  # - name: Upgrade all packages to the latest version
  #   apt:
  #     name: "*"
  #     state: latest

#   - name: Install NVM (Node Version Manager) #Fuente: https://gist.github.com/komuw/b3b5d24977d4df7bd549
#     become: no
#     ansible.builtin.shell: > # Usar el módulo "shell" para ejecutar comandos de shell e instalar nvm desde el script
#       curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.39.1/install.sh | bash
#     args:
#       executable: /bin/bash # Indicar que el shell a utilizar es Bash
#       chdir: "$HOME" # Cambiar el directorio de trabajo al directorio de inicio del usuario
#       creates: "$HOME/.nvm/nvm.sh" # Se comprueba si el archivo "nvm.sh" ya existe en el directorio de inicio

#   - name: Install Node 
#     #para que esto funcionara hay que ejecutar el siguiente comando en el server para crear un enlace simbolico con la version por defecto de node que se esta usando
#     #sudo ln -sf /root/.nvm/versions/node/v16.14.1/bin/node /usr/bin/node
#     become: yes
#     shell: > # Activar nvm y luego instalar una versión específica de Node.js
#       . {{ ansible_env.HOME }}/.nvm/nvm.sh && nvm install {{ item }}
#       ln -sf ~/.nvm/versions/node/{{ item }}/bin/node /usr/bin/node

#     args:
#       executable: /bin/bash
#       chdir: "{{ ansible_env.HOME }}"
#       creates: "{{ ansible_env.HOME }}/.nvm/versions/{{ item }}"
#     loop: # Realizar esta tarea para múltiples versiones de Node.js
#       - 16.14.1 #IDEALMENTE ESTO DEBE SER UNA CONSTANTE GLOBAL


#   - name: Install PM2 packages
#     #become: yes
#     npm:
#       executable: ~/.nvm/versions/node/v16.14.1/bin/npm #QUEDA PENDIENTE PASAR EL v16.14.1 como variable o constante global
#       name: pm2
#       global: yes
#       state: present

#   - name: Install http-server (OPCIONAL)
#     npm:
#       executable: ~/.nvm/versions/node/v16.14.1/bin/npm #QUEDA PENDIENTE PASAR EL v16.14.1 como variable o constante global
#       name: http-server
#       global: yes
#       state: present
  

# #Instalacion de Docker (Fuente: https://www.digitalocean.com/community/tutorials/how-to-use-ansible-to-install-and-set-up-docker-on-ubuntu-20-04)
#   - name: Add Docker GPG apt Key
#     apt_key:
#       url: https://download.docker.com/linux/ubuntu/gpg
#       state: present

#   - name: Add Docker Repository
#     apt_repository:
#       repo: deb https://download.docker.com/linux/ubuntu focal stable
#       state: present

#   - name: Update apt and install docker-ce
#     apt:
#       name: docker-ce
#       state: latest
#       update_cache: true

#Instalacion de MongoDB (INTENTO 1)
  # - name: Import the public key used by the package management system
  #   apt_key: keyserver=hkp://keyserver.ubuntu.com:80 id=7F0CEB10 state=present
  
  # - name: Add MongoDB repository
  #   apt_repository: repo='deb http://downloads-distro.mongodb.org/repo/ubuntu-upstart dist 10gen' state=present
  
  # - name: install mongodb
  #   apt: pkg=mongodb-org state=latest update_cache=yes
  #   notify:
  #   - start mongodb
  
  # - name: start mongodb
  #   service:
  #     name: mongod
  #     state: started


  # #instalar MongoDB (Intento 2)
  # - name: Install aptitude using apt
  #   apt:
  #     name: aptitude
  #     state: latest
  #     update_cache: yes

  # - name: Import public key
  #   apt_key:
  #     url: 'https://www.mongodb.org/static/pgp/server-4.2.asc'
  #     state: present

  # - name: Add repository
  #   apt_repository:
  #     filename: '/etc/apt/sources.list.d/mongodb-org-4.2.list'
  #     repo: 'deb https://repo.mongodb.org/apt/ubuntu bionic/mongodb-org/4.2 multiverse'
  #     state: present
  #     update_cache: yes

  # - name: Install mongoDB
  #   apt:
  #     name: mongodb-org
  #     state: present
  #     update_cache: yes

  # - name: Ensure mongodb is running and and enabled to start automatically on reboots
  #   service:
  #     name: mongod
  #     enabled: yes
  #     state: started




  - name: install and check nginx latest version
    apt:
      name: nginx
      state: latest
  
  - name: start nginx
    service:
      name: nginx
      state: started
######################################################################################333333


  - name: Clone or update neurone-gm repositoryy
    git:
      repo: 'https://github.com/trabajo-titulacion-neurone/modulo-neurone-gm.git'
      dest: ~/escritorio/modulo-neurone-gm
      clone: yes
      update: yes

    # - name: Clonacion de un repositorio privado desde bash y un token (FUNCIONA. Borrar despues)
    #   shell: git clone https://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@github.com/gerardoluceroc/repo-privado.git /root/escritorio/repo-privado

  - name: Clone or update trivia GAME repositoryy
    git:
      repo: 'https://github.com/trabajo-titulacion-neurone/neurone-trivia.git'
      dest: ~/escritorio/neurone-trivia
      clone: yes
      update: yes









